name: Open State CI/CD

on: 
  push:
    branches: 
      - '*'    
  release:
    types: [published]
  
jobs:

  tests:
    name: Run tests
    runs-on: ubuntu-latest
    continue-on-error: false

    services:

      mongodb:
        image: mongo:4.4.0
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: open_state
          MONGO_INITDB_ROOT_PASSWORD: open_state
          MONGO_INITDB_DATABASE: open_state

      redis:
        image: redis:6.0.7
        ports:
          - 6379:6379

    steps:
      
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare Java SDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Execute tests
        run: ./gradlew check

      - name: Save test results
        uses: actions/upload-artifact@v2
        with:
          name: test_results_${{ github.sha }}
          path: build/reports/tests/test/**

      - name: Execute test coverage report
        run: ./gradlew jacocoTestReport

      - name: Save test coverage results
        uses: actions/upload-artifact@v2
        with:
          name: test_coverage_results_${{ github.sha }}
          path: build/reports/jacoco/test/html/**


  build:
    name: Build project
    runs-on: ubuntu-latest
    continue-on-error: false
    needs: [tests]
    if: github.event.action == 'published'

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare Java SDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build project
        run: ./gradlew assemble

      - name: Save executables
        uses: actions/upload-artifact@v2
        with:
          name: assembles_${{ github.sha }}
          path: build/libs/*.jar
          
  package:
    name: Packaging
    runs-on: ubuntu-latest
    continue-on-error: false
    needs: [tests, build]

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: assembles_${{ github.sha }}
          path: build/libs
            
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER_NAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: openplatform/open-state:${{ github.event.release.tag_name }}
          file: docker/Dockerfile
          
          
  deploy-sprint:
    name: Deploy Sprint
    runs-on: ubuntu-latest
    continue-on-error: false
    needs: [tests, build, package]
    
    steps:
      
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy server
        uses: layko-andrey/open-state/.github/actions/deploy
        with:
          sshKey: ${{ secrets.SPRINT_DEPLOY_SSH_KEY }}
          server: ${{ secrets.SPRINT_SERVER }}
          dockerUser: ${{ secrets.DOCKERHUB_USER_NAME }}
          dockerPassword: ${{ secrets.DOCKERHUB_PASSWORD }}
          image: ${{ github.event.release.tag_name }}
